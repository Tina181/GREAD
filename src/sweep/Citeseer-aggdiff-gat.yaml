program: run_GNN.py

# num_samples: 100
metric:
  name: test_mean
  goal: maximize
# method: random  # # You can choose the method to be grid, random or bayes
method: bayes
# random_state_seed: 42  # 设置随机种子以获得可复现的结果

parameters:
  dataset:
    values: ['Citeseer']
  epoch:
    values: [200]
  alpha_dim:
    values: ['vc']
  beta_dim:
    values: ['vc']

  hidden_dim:
    values: [32, 64, 128, 256]
  reaction_term:
    values: ['aggdiff-gat']
  #   values: ['cos_1', 'cos_2', 'cos_3', ]
  heads:
    values: [1, 4, 8]
  data_norm:
    values: ['rw', 'gcn']
  self_loop_weight:
    values: [0, 1.]
  use_mlp:

    values: [false, true]
  m2_mlp:
    values: [false, true]
  XN_activation:
    values: [false, true]

  diffusion_rate1:
    distribution: q_uniform
    min: 0
    max: 1
    q: 0.05
  diffusion_rate2:
    distribution: q_uniform
    min: 0
    max: 0.8
    q: 0.05
  method:
    values: ['rk4']

  step_size:
    distribution: q_uniform
    min: 0
    max: 0.5
    q: 0.05
  time:  
    distribution: uniform
    min: 2
    max: 3
command:
  - ${env}
  - python
  - run_GNN.py
  - --geom_gcn_splits
  - --gpu=5
  - --wandb
  - --wandb_project=grade-sweep
  - --beta_diag=True
  - --block=constant
  - --use_best_params
  - ${args}
